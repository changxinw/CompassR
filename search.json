[{"path":"https://changxinw.github.io/CompassR/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2024 Changxin Wan Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://changxinw.github.io/CompassR/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Changxin Wan. Maintainer.","code":""},{"path":"https://changxinw.github.io/CompassR/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Wan C (2025). CompassR: CompassR. R package version 1.0.0, https://changxinw.github.io/CompassR/.","code":"@Manual{,   title = {CompassR: CompassR},   author = {Changxin Wan},   year = {2025},   note = {R package version 1.0.0},   url = {https://changxinw.github.io/CompassR/}, }"},{"path":[]},{"path":"https://changxinw.github.io/CompassR/index.html","id":"overview","dir":"","previous_headings":"","what":"Overview","title":"CompassR","text":"developed CompassR support -depth analyses visualizations CRE-gene linkages. CompassR open source R package built upon CompassDB. CompassR can used analyze visualize CRE-gene linkages one multiple samples, identify TFs whose motifs enriched selected CREs.","code":""},{"path":"https://changxinw.github.io/CompassR/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"CompassR","text":"Installation required packages: Installation suggested packages (optional): install latest release CompassR GitHub:","code":"# List of additional packages to install cran_pkgs <- c(\"aplot\", \"cowplot\", \"dplyr\", \"tidyr\", \"ggplot2\", \"ggplotify\", \"patchwork\", \"RColorBrewer\", \"jsonlite\", \"httr\")  # Install missing packages sapply(cran_pkgs, function(pkg) {   if (!requireNamespace(pkg, quietly = TRUE)) {     install.packages(pkg, dependencies = TRUE)   } })  # Install Bioconductor packages if needed bioc_pkgs <- c(\"biomaRt\", \"GenomicRanges\", \"Gviz\") if (!require(\"BiocManager\", quietly = TRUE))     install.packages(\"BiocManager\") BiocManager::install(bioc_pkgs, update = TRUE, ask = FALSE) # List of additional packages to install cran_pkgs <- c(\"Seurat\", \"Signac\", \"ggwordcloud\")  # Install missing packages sapply(cran_pkgs, function(pkg) {   if (!requireNamespace(pkg, quietly = TRUE)) {     install.packages(pkg, dependencies = TRUE)   } }) if (!requireNamespace(\"remotes\", quietly = TRUE))     install.packages(\"remotes\") remotes::install_github(\"changxinw/CompassR\")"},{"path":"https://changxinw.github.io/CompassR/index.html","id":"tutorial","dir":"","previous_headings":"","what":"Tutorial","title":"CompassR","text":"vignettes, provide three examples using CompassR tissue level, celltype level, single-sample level. Tissue level: Please go Myh6 Regulation Heart tissue-level example. Celltype level: Please go HEY2 Regulation Cardiomyocytes celltype-level example. Sample level: Please go CD79B Regulation B cells sample-level example. Integrate inhosue data: Learn integrat inhouse data Integrating -house Data Datasets CompassDB","code":""},{"path":"https://changxinw.github.io/CompassR/reference/check_gene.html","id":null,"dir":"Reference","previous_headings":"","what":"check if a gene is valid — check_gene","title":"check if a gene is valid — check_gene","text":"check gene valid","code":""},{"path":"https://changxinw.github.io/CompassR/reference/check_gene.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"check if a gene is valid — check_gene","text":"","code":"check_gene(assembly, gene)"},{"path":"https://changxinw.github.io/CompassR/reference/check_gene.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"check if a gene is valid — check_gene","text":"assembly hg38 mm10 gene gene symbol","code":""},{"path":"https://changxinw.github.io/CompassR/reference/check_gene.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"check if a gene is valid — check_gene","text":"whether gene valid","code":""},{"path":"https://changxinw.github.io/CompassR/reference/check_gene.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"check if a gene is valid — check_gene","text":"","code":"NA #> [1] NA"},{"path":"https://changxinw.github.io/CompassR/reference/combind_plots.html","id":null,"dir":"Reference","previous_headings":"","what":"plot_expr_boxplot = function(expr_list_all, group_df, gene, p_group) sample_ids = group_df$Sample expr_list = lapply(sample_ids, function(x) expr_df = data.frame(expr_list_all[[x]][gene, ]) expr_df$Sample = x colnames(expr_df) = c(","title":"plot_expr_boxplot = function(expr_list_all, group_df, gene, p_group) sample_ids = group_df$Sample expr_list = lapply(sample_ids, function(x) expr_df = data.frame(expr_list_all[[x]][gene, ]) expr_df$Sample = x colnames(expr_df) = c(","text":"plot_expr_boxplot = function(expr_list_all, group_df, gene, p_group)   sample_ids = group_df$Sample   expr_list = lapply(sample_ids, function(x)     expr_df = data.frame(expr_list_all[[x]][gene, ])     expr_df$Sample = x     colnames(expr_df) = c(\"Gene\", \"Sample\")     return(expr_df)   )   plot_df = .call(\"rbind\", expr_list)   plot_df$Sample = factor(plot_df$Sample, levels = rev(sample_ids))   p <- ggplot(data=plot_df, aes(x=Sample, y=Gene)) +     labs(y = gene) +     # geom_bar(stat=\"identity\") +     geom_boxplot(fill='#A4A4A4') +     scale_y_continuous(position = \"right\", expand = c(0,0)) +     coord_flip() +     ylim2(p_group) +     theme(       panel.background = element_rect(fill='transparent'),       plot.background = element_rect(fill='transparent', color=NA),       axis.text.y=element_blank(),       axis.title.y=element_blank()     )   return(p)  Merge plots together large plot","code":""},{"path":"https://changxinw.github.io/CompassR/reference/combind_plots.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"plot_expr_boxplot = function(expr_list_all, group_df, gene, p_group) sample_ids = group_df$Sample expr_list = lapply(sample_ids, function(x) expr_df = data.frame(expr_list_all[[x]][gene, ]) expr_df$Sample = x colnames(expr_df) = c(","text":"","code":"combind_plots(   track_plot,   annot_plot,   expr_plot,   track_width,   legend.position = \"bottom\",   t = -20,   b = 20 )"},{"path":"https://changxinw.github.io/CompassR/reference/combind_plots.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"plot_expr_boxplot = function(expr_list_all, group_df, gene, p_group) sample_ids = group_df$Sample expr_list = lapply(sample_ids, function(x) expr_df = data.frame(expr_list_all[[x]][gene, ]) expr_df$Sample = x colnames(expr_df) = c(","text":"track_plot plot object genome tracks annot_plot annotation bar expression expr_plot gene expression barplot track_width width tracks legend.position legend position, default bottom t alignment expression barplot, distance top b alignment expression barplot, distance bottom","code":""},{"path":"https://changxinw.github.io/CompassR/reference/combind_plots.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"plot_expr_boxplot = function(expr_list_all, group_df, gene, p_group) sample_ids = group_df$Sample expr_list = lapply(sample_ids, function(x) expr_df = data.frame(expr_list_all[[x]][gene, ]) expr_df$Sample = x colnames(expr_df) = c(","text":"plot object combined plot","code":""},{"path":"https://changxinw.github.io/CompassR/reference/combind_plots.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"plot_expr_boxplot = function(expr_list_all, group_df, gene, p_group) sample_ids = group_df$Sample expr_list = lapply(sample_ids, function(x) expr_df = data.frame(expr_list_all[[x]][gene, ]) expr_df$Sample = x colnames(expr_df) = c(","text":"","code":"NA #> [1] NA"},{"path":"https://changxinw.github.io/CompassR/reference/genome_track_map.html","id":null,"dir":"Reference","previous_headings":"","what":"Function to make the genome track map with combined expression and group information — genome_track_map","title":"Function to make the genome track map with combined expression and group information — genome_track_map","text":"Function make genome track map combined expression group information","code":""},{"path":"https://changxinw.github.io/CompassR/reference/genome_track_map.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function to make the genome track map with combined expression and group information — genome_track_map","text":"","code":"genome_track_map(   link_df,   group_df,   gene,   expr_df,   output_file = \"./test.pdf\",   assembly = \"hg38\",   bm_mirror = NULL,   width = 12,   height = 6,   ... )"},{"path":"https://changxinw.github.io/CompassR/reference/genome_track_map.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function to make the genome track map with combined expression and group information — genome_track_map","text":"link_df data linkage data frame group_df data frame group information gene gene plot expr_df list gene expression information output_file output plot file name assembly bm_mirror useast, asia, www width plot width height plot height ... additional parameters passed plots combind_plots","code":""},{"path":"https://changxinw.github.io/CompassR/reference/genome_track_map.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Function to make the genome track map with combined expression and group information — genome_track_map","text":"plot object","code":""},{"path":"https://changxinw.github.io/CompassR/reference/genome_track_map.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Function to make the genome track map with combined expression and group information — genome_track_map","text":"","code":"NA #> [1] NA"},{"path":"https://changxinw.github.io/CompassR/reference/make_peak_group.html","id":null,"dir":"Reference","previous_headings":"","what":"separate peaks based on their CRE-gene linkages on diferent groups — make_peak_group","title":"separate peaks based on their CRE-gene linkages on diferent groups — make_peak_group","text":"separate peaks based CRE-gene linkages diferent groups","code":""},{"path":"https://changxinw.github.io/CompassR/reference/make_peak_group.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"separate peaks based on their CRE-gene linkages on diferent groups — make_peak_group","text":"","code":"make_peak_group(link_gene_df, peaks, df_group)"},{"path":"https://changxinw.github.io/CompassR/reference/make_peak_group.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"separate peaks based on their CRE-gene linkages on diferent groups — make_peak_group","text":"link_gene_df CRE-gene link data frame peaks coordinate peaks df_group group information sample","code":""},{"path":"https://changxinw.github.io/CompassR/reference/make_peak_group.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"separate peaks based on their CRE-gene linkages on diferent groups — make_peak_group","text":"data frame peak proportion different groups","code":""},{"path":"https://changxinw.github.io/CompassR/reference/make_peak_group.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"separate peaks based on their CRE-gene linkages on diferent groups — make_peak_group","text":"","code":"NA #> [1] NA"},{"path":"https://changxinw.github.io/CompassR/reference/plot_annotation_bar.html","id":null,"dir":"Reference","previous_headings":"","what":"Function to plot annotation bar for each sample — plot_annotation_bar","title":"Function to plot annotation bar for each sample — plot_annotation_bar","text":"Function plot annotation bar sample","code":""},{"path":"https://changxinw.github.io/CompassR/reference/plot_annotation_bar.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function to plot annotation bar for each sample — plot_annotation_bar","text":"","code":"plot_annotation_bar(df_group, sample_order = df_group$Sample, ...)"},{"path":"https://changxinw.github.io/CompassR/reference/plot_annotation_bar.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function to plot annotation bar for each sample — plot_annotation_bar","text":"df_group annotation dataframe two columns: Sample Group sample_order vector indicate sample order samples ... parameters passed ggplot2::theme","code":""},{"path":"https://changxinw.github.io/CompassR/reference/plot_annotation_bar.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Function to plot annotation bar for each sample — plot_annotation_bar","text":"ggplot2 object","code":""},{"path":"https://changxinw.github.io/CompassR/reference/plot_annotation_bar.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Function to plot annotation bar for each sample — plot_annotation_bar","text":"","code":"NA #> [1] NA"},{"path":"https://changxinw.github.io/CompassR/reference/plot_expr_barplot.html","id":null,"dir":"Reference","previous_headings":"","what":"Barplot of gene expression level — plot_expr_barplot","title":"Barplot of gene expression level — plot_expr_barplot","text":"Barplot gene expression level","code":""},{"path":"https://changxinw.github.io/CompassR/reference/plot_expr_barplot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Barplot of gene expression level — plot_expr_barplot","text":"","code":"plot_expr_barplot(expr_df, p_group, gene = \"Gene\")"},{"path":"https://changxinw.github.io/CompassR/reference/plot_expr_barplot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Barplot of gene expression level — plot_expr_barplot","text":"expr_df dataframe gene expression p_group plot object grouping bar gene expressed gene plot","code":""},{"path":"https://changxinw.github.io/CompassR/reference/plot_expr_barplot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Barplot of gene expression level — plot_expr_barplot","text":"ggplot2 object gene expression level","code":""},{"path":"https://changxinw.github.io/CompassR/reference/plot_expr_barplot.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Barplot of gene expression level — plot_expr_barplot","text":"","code":"NA #> [1] NA"},{"path":"https://changxinw.github.io/CompassR/reference/plot_genome_track.html","id":null,"dir":"Reference","previous_headings":"","what":"functions to plot out the genome track — plot_genome_track","title":"functions to plot out the genome track — plot_genome_track","text":"functions plot genome track","code":""},{"path":"https://changxinw.github.io/CompassR/reference/plot_genome_track.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"functions to plot out the genome track — plot_genome_track","text":"","code":"plot_genome_track(   df,   gene,   assembly,   sample_ids,   min_x = NULL,   max_x = NULL,   bm_host = \"https://nov2020.archive.ensembl.org\",   bm_mirror = NULL )"},{"path":"https://changxinw.github.io/CompassR/reference/plot_genome_track.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"functions to plot out the genome track — plot_genome_track","text":"df gene-cre linkage dataframe gene gene plot assembly either mm10 hg38 sample_ids samples want plot min_x setting minimum range max_x setting maximum range bm_host biomart host site bm_mirror biomart useat, asia, www","code":""},{"path":"https://changxinw.github.io/CompassR/reference/plot_genome_track.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"functions to plot out the genome track — plot_genome_track","text":"list plots genome track","code":""},{"path":"https://changxinw.github.io/CompassR/reference/plot_genome_track.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"functions to plot out the genome track — plot_genome_track","text":"","code":"NA #> [1] NA"},{"path":"https://changxinw.github.io/CompassR/reference/plot_giggle.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot motif or tf binding information — plot_giggle","title":"Plot motif or tf binding information — plot_giggle","text":"Plot motif tf binding information","code":""},{"path":"https://changxinw.github.io/CompassR/reference/plot_giggle.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot motif or tf binding information — plot_giggle","text":"","code":"plot_giggle(motif_df, top_n = 15, title = \"\")"},{"path":"https://changxinw.github.io/CompassR/reference/plot_giggle.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot motif or tf binding information — plot_giggle","text":"motif_df data frame motif tf binding information top_n top n sets showed title title plot","code":""},{"path":"https://changxinw.github.io/CompassR/reference/plot_giggle.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot motif or tf binding information — plot_giggle","text":"ggplot2 object motif plot","code":""},{"path":"https://changxinw.github.io/CompassR/reference/plot_giggle.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot motif or tf binding information — plot_giggle","text":"","code":"NA #> [1] NA"},{"path":"https://changxinw.github.io/CompassR/reference/query_exprssion.html","id":null,"dir":"Reference","previous_headings":"","what":"Get expression of each sample — query_exprssion","title":"Get expression of each sample — query_exprssion","text":"Get expression sample","code":""},{"path":"https://changxinw.github.io/CompassR/reference/query_exprssion.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get expression of each sample — query_exprssion","text":"","code":"query_exprssion(assembly, gene, celltype = FALSE)"},{"path":"https://changxinw.github.io/CompassR/reference/query_exprssion.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get expression of each sample — query_exprssion","text":"assembly hg38 mm10 gene gene symbol celltype TRUE FALSE indicate cell type specific expression","code":""},{"path":"https://changxinw.github.io/CompassR/reference/query_exprssion.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get expression of each sample — query_exprssion","text":"data frame expression","code":""},{"path":"https://changxinw.github.io/CompassR/reference/query_exprssion.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get expression of each sample — query_exprssion","text":"","code":"NA #> [1] NA"},{"path":"https://changxinw.github.io/CompassR/reference/query_linkage.html","id":null,"dir":"Reference","previous_headings":"","what":"query linkage of a gene or a genome region — query_linkage","title":"query linkage of a gene or a genome region — query_linkage","text":"query linkage gene genome region","code":""},{"path":"https://changxinw.github.io/CompassR/reference/query_linkage.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"query linkage of a gene or a genome region — query_linkage","text":"","code":"query_linkage(assembly, gene = \"\", coord = \"\", celltype = FALSE)"},{"path":"https://changxinw.github.io/CompassR/reference/query_linkage.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"query linkage of a gene or a genome region — query_linkage","text":"assembly hg38 mm10 gene gene symbol coord genome coordinate form chr-start-end celltype TRUE FALSE indicate cell type specific linkage","code":""},{"path":"https://changxinw.github.io/CompassR/reference/query_linkage.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"query linkage of a gene or a genome region — query_linkage","text":"list linkage corresponding sample information","code":""},{"path":"https://changxinw.github.io/CompassR/reference/query_linkage.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"query linkage of a gene or a genome region — query_linkage","text":"","code":"NA #> [1] NA"},{"path":"https://changxinw.github.io/CompassR/reference/query_meta.html","id":null,"dir":"Reference","previous_headings":"","what":"query metadata of samples — query_meta","title":"query metadata of samples — query_meta","text":"query metadata samples","code":""},{"path":"https://changxinw.github.io/CompassR/reference/query_meta.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"query metadata of samples — query_meta","text":"","code":"query_meta(api = \"http://compass-db.com/metaapi/\")"},{"path":"https://changxinw.github.io/CompassR/reference/query_meta.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"query metadata of samples — query_meta","text":"api website api","code":""},{"path":"https://changxinw.github.io/CompassR/reference/query_meta.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"query metadata of samples — query_meta","text":"data frame sample information","code":""},{"path":"https://changxinw.github.io/CompassR/reference/query_meta.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"query metadata of samples — query_meta","text":"","code":"NA #> [1] NA"},{"path":"https://changxinw.github.io/CompassR/reference/tf_binding.html","id":null,"dir":"Reference","previous_headings":"","what":"Obtain TF binding information of genome region(s) — tf_binding","title":"Obtain TF binding information of genome region(s) — tf_binding","text":"Obtain TF binding information genome region(s)","code":""},{"path":"https://changxinw.github.io/CompassR/reference/tf_binding.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Obtain TF binding information of genome region(s) — tf_binding","text":"","code":"tf_binding(assembly, coords)"},{"path":"https://changxinw.github.io/CompassR/reference/tf_binding.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Obtain TF binding information of genome region(s) — tf_binding","text":"assembly hg38/mm10 coords genome coordinate form chr-start-end","code":""},{"path":"https://changxinw.github.io/CompassR/reference/tf_binding.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Obtain TF binding information of genome region(s) — tf_binding","text":"dataframe transcription factor binding","code":""},{"path":"https://changxinw.github.io/CompassR/reference/tf_binding.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Obtain TF binding information of genome region(s) — tf_binding","text":"","code":"NA #> [1] NA"}]
